name: CI/CD - Backend Deployment to Heroku

on:
  push:
    branches:
      - master  # Trigger CI/CD pipeline for the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker Buildx (for building multi-platform Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Log in to DockerHub (using GitHub secrets for Docker login credentials)
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set up Heroku CLI
      - name: Set up Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token

      # Build and push the Docker image using Docker Compose
      - name: Build and push Docker image
        run: |
          docker-compose -f docker-compose.yml build backend  # Build the backend service
          echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com
          docker-compose -f docker-compose.yml push backend  # Push the Docker image to Heroku registry

      # Release the app on Heroku
      - name: Release the app on Heroku
        run: |
          heroku releases:restart -a property-portal-backend  # Restart the app to apply the new Docker image
